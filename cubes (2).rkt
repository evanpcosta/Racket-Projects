#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 7603 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 192
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e |cubes (2)|) (read-case-sensitive #t) (teachpacks ()) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";A scale factor used in rendering"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;A unit is"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";-- a color, string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;A stack is"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";a struct with three units"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"stack"
0 0 24 3 2 #" ("
0 0 14 3 2 #"u1"
0 0 24 3 1 #" "
0 0 14 3 2 #"u2"
0 0 24 3 1 #" "
0 0 14 3 2 #"u3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;A face is"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";a struct with three stacks"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"face"
0 0 24 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #" "
0 0 14 3 2 #"s3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;A cube is"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";a struct with six faces"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"cube"
0 0 24 3 2 #" ("
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #" "
0 0 14 3 2 #"f3"
0 0 24 3 1 #" "
0 0 14 3 2 #"f4"
0 0 24 3 1 #" "
0 0 14 3 2 #"f5"
0 0 24 3 1 #" "
0 0 14 3 2 #"f6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";solved cube"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";solved cube then f1 rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF1CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";solved cube then f1 rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF1C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";solved cube then f2 rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF2CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";solved cube then f2 rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF2C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";solved cube then f3 rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF3C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";solved cube then f3 rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF3CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";solved cube then f4 rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";solved cube then f4 rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";solved cube then f5 rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF5C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";solved cube then f5 is rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF5CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";solved cube then f6 is rotated cw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF6C"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";solved cube then f6 is rotated ccw once"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF6CC"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 9 #"make-face"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #"#| Templates"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"(define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"proc-cube"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 1 #" "
0 0 17 3 3 #"..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 18 #"proc-face (cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 6 #"  ...("
0 0 17 3 9 #"proc-face"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 10 #"(proc-face"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 7 #" a-cube"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 18 #"proc-face (cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 11 #"proc-face ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 11 #"a-cube))..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 9 #"proc-face"
0 0 17 3 10 #" (cube-f6 "
0 0 17 3 12 #"a-cube))...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"proc-face"
0 0 17 3 1 #" "
0 0 17 3 7 #"a-face "
0 0 17 3 3 #"..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 10 #"proc-stack"
0 0 17 3 9 #" (face-s1"
0 0 17 3 7 #" a-face"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 10 #"proc-stack"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 7 #" a-face"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 10 #"proc-stack"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-face"
0 0 17 3 2 #"))"
0 0 17 3 3 #"..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 10 #"proc-stack"
0 0 17 3 1 #" "
0 0 17 3 8 #"a-stack "
0 0 17 3 3 #"..."
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 8 #"stack-u1"
0 0 17 3 1 #" "
0 0 17 3 7 #"a-stack"
0 0 17 3 1 #")"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 8 #"stack-u2"
0 0 17 3 8 #" a-stack"
0 0 17 3 1 #")"
0 0 17 3 3 #"..."
0 0 17 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 17 3 3 #"..."
0 0 17 3 1 #"("
0 0 17 3 8 #"stack-u3"
0 0 17 3 1 #" "
0 0 17 3 8 #"a-stack)"
0 0 17 3 4 #"...)"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"remaking a cube with no changes"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 9 #"make-cube"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"   (make-face"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"    (make-stack (stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 9 #" (face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 9 #" (face-s2"
0 0 17 3 9 #" (cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                ("
0 0 17 3 17 #"stack-u2 (face-s2"
0 0 17 3 9 #" (cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 8 #"cube-f1 "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 7 #" a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f1"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 9 #"make-face"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f2"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 9 #"make-face"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 8 #"cube-f3 "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f3"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 9 #"make-face"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 9 #"a-cube)))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f4"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 9 #"make-face"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 7 #" a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 10 #"stack-u1 ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 9 #"face-s2 ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f5"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 5 #")))))"
0 0 17 29 1 #"\n"
0 0 17 3 4 #"   ("
0 0 17 3 9 #"make-face"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 4 #"))))"
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 10 #"make-stack"
0 0 17 3 2 #" ("
0 0 17 3 8 #"stack-u1"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u2"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 6 #"a-cube"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 8 #"stack-u3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"face-s3"
0 0 17 3 2 #" ("
0 0 17 3 7 #"cube-f6"
0 0 17 3 1 #" "
0 0 17 3 11 #"a-cube)))))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;col-n: face num -> stack"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;reads the nth column of a face and creates a stack with those unit"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";;strategy: structural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF1C"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF3C"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;repl-col-n: face num stack -> face"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;replaces the nth column of a face with a given stack, top down"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF1C"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;repl-stack-n face num stack -> face"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;replaces the nth stack in a face with a given stack"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 7 #"a-stack"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 7 #"a-stack"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF1CC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF1C"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF3C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;rev-stack: stack -> stack"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;reverses the order of units in a stack"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomopsition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR6"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;rotate-cw-face: face -> face"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;rotates the face clockwise"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: structral decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-face"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-stack"
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-face"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;rotate-ccw-face: face -> face"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;rotates the face counterclockwise"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;strategy: function composition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-face"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 1 #" "
0 0 14 3 6 #"COLOR3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;cw-f1: cube -> cube"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;changes cube when face1 turned clockwise"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF1C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;ccw-f1: cube -> cube"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;changes cube when face1 turned counterclockwise"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF1CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;cw-f2: cube -> cube"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;changes cube when face2 turned clockwise"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f2"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF2C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;ccw-f2: cube -> cube"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;changes cube when face2 turned counterclockwise"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;strategy: stuctural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f2"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF2CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;cw-f3: cube-> cube"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;changes cube when face3 turned clockwise"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;strategy: structural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f3"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF3C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;ccw-f3: cube-> cube"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;changes cube when face3 turned clockwise"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;strategy: structural decomposition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-cube"
0 0 24 3 2 #" ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"repl-col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f3"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF3CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; cw-f4: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; changes a cube when f4 is turned clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f4"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f4"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 9 #")        "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; ccw-f4: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; changes a cube when f4 is turned counter-clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f4"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f4"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 2 #") "
0 0 14 3 5 #"CUBE1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; cw-f5: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; changes a cube when f5 is turned clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f5"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF5C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f5"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; ccw-f5: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; changes a cube when f5 is turned counter-clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f5"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF5CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f5"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"repl-col-n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 5 #"col-n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; cw-f6: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; changes a cube when f6 is turned clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f6"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 7 #"CUBEF6C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f6"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cw-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"rotate-cw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; ccw-f6: gameworld -> gameworld"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; changes a cube when f6 is turned counter-clockwise once"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f6"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 2 #") "
0 0 14 3 8 #"CUBEF6CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f6"
0 0 24 3 1 #" "
0 0 14 3 7 #"CUBEF4C"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-face"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 10 #"make-stack"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ccw-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-cube"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"repl-stack-n"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rev-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"rotate-ccw-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";render-stack: stack -> image"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";Takes a stack and renders all its units"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";Strategy: Structural Decomposition"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"render-stack"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u1"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.2"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u2"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.8"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 8 #"stack-u3"
0 0 24 3 1 #" "
0 0 14 3 7 #"a-stack"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";render-face: face -> image"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";Takes in a face and returns and renders all its stacks"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";Strategy: Structural Decomposition & Function Composition"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 3 #")) "
0 6           4 21 2351
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0)"
 #" #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50"
 #" 0 0)) 255 \"red\"))) #(struct:translate 0 60 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:"
 #"pulled-point 0 0 0 50 0 0)) 255 \"red\"))))) #(struct:translate 0 12"
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point "
 #"0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"red\")))))"
 #" #(struct:translate 60 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-po"
 #"int 0 0 0 50 0 0)) 255 \"red\"))) #(struct:translate 0 60 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 "
 #"0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"red\"))))) #(struct:tr"
 #"anslate 0 120 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:p"
 #"ulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 "
 #"\"red\"))))))) #(struct:translate 120 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(s"
 #"truct:pulled-point 0 0 0 50 0 0)) 255 \"red\"))) #(struct:translate "
 #"0 60 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"red\"))"
 #"))) #(struct:translate 0 120 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 "
 #"0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 "
 #"0 50 0 0)) 255 \"red\")))))) #(struct:bb 170 170 170) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 3 #")) "
0 6           4 21 2372
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0)"
 #" #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50"
 #" 0 0)) 255 \"pink\"))) #(struct:translate 60 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct"
 #":pulled-point 0 0 0 50 0 0)) 255 \"purple\"))))) #(struct:translate "
 #"120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-po"
 #"int 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"purple"
 #"\"))))) #(struct:translate 0 60 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pu"
 #"lled-point 0 0 0 50 0 0)) 255 \"pink\"))) #(struct:translate 60 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 "
 #"50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"purple\"))))) "
 #"#(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0)"
 #" #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50"
 #" 0 0)) 255 \"purple\"))))))) #(struct:translate 0 120 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 "
 #"50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"pink\"))) #(st"
 #"ruct:translate 60 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(st"
 #"ruct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)"
 #") 255 \"purple\"))))) #(struct:translate 120 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct"
 #":pulled-point 0 0 0 50 0 0)) 255 \"purple\")))))) #(struct:bb 170 17"
 #"0 170) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF1CC"
0 0 24 3 3 #")) "
0 6           4 21 2378
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0)"
 #" #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50"
 #" 0 0)) 255 \"purple\"))) #(struct:translate 60 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(stru"
 #"ct:pulled-point 0 0 0 50 0 0)) 255 \"purple\"))))) #(struct:translat"
 #"e 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-"
 #"point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"purp"
 #"le\"))))) #(struct:translate 0 60 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:"
 #"pulled-point 0 0 0 50 0 0)) 255 \"orange\"))) #(struct:translate 60 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point "
 #"0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"orange\"))"
 #"))) #(struct:translate 120 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 "
 #"0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 "
 #"0 50 0 0)) 255 \"orange\"))))))) #(struct:translate 0 120 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point "
 #"0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 \"orange\"))"
 #") #(struct:translate 60 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0"
 #") #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 5"
 #"0 0 0)) 255 \"orange\"))))) #(struct:translate 120 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #("
 #"struct:pulled-point 0 0 0 50 0 0)) 255 \"orange\")))))) #(struct:bb "
 #"170 170 170) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-face"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"render-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.2"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"render-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.8"
0 0 24 3 1 #" "
0 0 14 3 9 #"UNIT-SIZE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"render-stack"
0 0 24 3 2 #" ("
0 0 14 3 7 #"face-s3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-face"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";render-cube: cube -> image"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; Takes a cube struct and renders its faces togeher"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-cube"
0 0 24 3 1 #" "
0 0 14 3 5 #"CUBE1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 6           4 21 11069
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:polygon (#(struct:pulled-point 0 0 180 18"
 #"0 0 0) #(struct:pulled-point 0 0 230 180 0 0) #(struct:pulled-point "
 #"0 0 230 230 0 0) #(struct:pulled-point 0 0 180 230 0 0)) 255 \"green"
 #"\") #(struct:polygon (#(struct:pulled-point 0 0 240 180 0 0) #(struc"
 #"t:pulled-point 0 0 290 180 0 0) #(struct:pulled-point 0 0 290 230 0 "
 #"0) #(struct:pulled-point 0 0 240 230 0 0)) 255 \"green\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 300 180 0 0) #(struct:pulled-poin"
 #"t 0 0 350 180 0 0) #(struct:pulled-point 0 0 350 230 0 0) #(struct:p"
 #"ulled-point 0 0 300 230 0 0)) 255 \"green\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 180 240 0 0) #(struct:pulled-point 0 0 230 240"
 #" 0 0) #(struct:pulled-point 0 0 230 290 0 0) #(struct:pulled-point 0"
 #" 0 180 290 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 240 240 0 0) #(struct:pulled-point 0 0 290 240 0 0) #(struc"
 #"t:pulled-point 0 0 290 290 0 0) #(struct:pulled-point 0 0 240 290 0 "
 #"0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 0 300 "
 #"240 0 0) #(struct:pulled-point 0 0 350 240 0 0) #(struct:pulled-poin"
 #"t 0 0 350 290 0 0) #(struct:pulled-point 0 0 300 290 0 0)) 255 \"gre"
 #"en\")) #(struct:polygon (#(struct:pulled-point 0 0 180 300 0 0) #(st"
 #"ruct:pulled-point 0 0 230 300 0 0) #(struct:pulled-point 0 0 230 350"
 #" 0 0) #(struct:pulled-point 0 0 180 350 0 0)) 255 \"green\")) #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 240 300 0 0) #(struct:pulled-p"
 #"oint 0 0 290 300 0 0) #(struct:pulled-point 0 0 290 350 0 0) #(struc"
 #"t:pulled-point 0 0 240 350 0 0)) 255 \"green\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 300 300 0 0) #(struct:pulled-point 0 0 350 "
 #"300 0 0) #(struct:pulled-point 0 0 350 350 0 0) #(struct:pulled-poin"
 #"t 0 0 300 350 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 180 0 0) #(struct:pulled-point 0 0 50 180 0 0) #(struc"
 #"t:pulled-point 0 0 50 230 0 0) #(struct:pulled-point 0 0 0 230 0 0))"
 #" 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 60 180"
 #" 0 0) #(struct:pulled-point 0 0 110 180 0 0) #(struct:pulled-point 0"
 #" 0 110 230 0 0) #(struct:pulled-p"
 #"oint 0 0 60 230 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 120 180 0 0) #(struct:pulled-point 0 0 170 180 0 0) #"
 #"(struct:pulled-point 0 0 170 230 0 0) #(struct:pulled-point 0 0 120 "
 #"230 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 240 0 0) #(struct:pulled-point 0 0 50 240 0 0) #(struct:pulled-"
 #"point 0 0 50 290 0 0) #(struct:pulled-point 0 0 0 290 0 0)) 255 \"or"
 #"ange\")) #(struct:polygon (#(struct:pulled-point 0 0 60 240 0 0) #(s"
 #"truct:pulled-point 0 0 110 240 0 0) #(struct:pulled-point 0 0 110 29"
 #"0 0 0) #(struct:pulled-point 0 0 60 290 0 0)) 255 \"orange\")) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 120 240 0 0) #(struct:pulled-"
 #"point 0 0 170 240 0 0) #(struct:pulled-point 0 0 170 290 0 0) #(stru"
 #"ct:pulled-point 0 0 120 290 0 0)) 255 \"orange\")) #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 300 0 0) #(struct:pulled-point 0 0 50 3"
 #"00 0 0) #(struct:pulled-point 0 0 50 350 0 0) #(struct:pulled-point "
 #"0 0 0 350 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 60 300 0 0) #(struct:pulled-point 0 0 110 300 0 0) #(struct"
 #":pulled-point 0 0 110 350 0 0) #(struct:pulled-point 0 0 60 350 0 0)"
 #") 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 120 3"
 #"00 0 0) #(struct:pulled-point 0 0 170 300 0 0) #(struct:pulled-point"
 #" 0 0 170 350 0 0) #(struct:pulled-point 0 0 120 350 0 0)) 255 \"oran"
 #"ge\")) #(struct:polygon (#(struct:pulled-point 0 0 180 360 0 0) #(st"
 #"ruct:pulled-point 0 0 230 360 0 0) #(struct:pulled-point 0 0 230 410"
 #" 0 0) #(struct:pulled-point 0 0 180 410 0 0)) 255 \"pink\")) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 240 360 0 0) #(struct:pulled-po"
 #"int 0 0 290 360 0 0) #(struct:pulled-point 0 0 290 410 0 0) #(struct"
 #":pulled-point 0 0 240 410 0 0)) 255 \"pink\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 300 360 0 0) #(struct:pulled-point 0 0 350 36"
 #"0 0 0) #(struct:pulled-point 0 0 350 410 0 0) #(struct:pulled-point "
 #"0 0 300 410 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 180 420 0 0) #(struct:pulled-point 0 0 230 420 0 0) #(struc"
 #"t:pulled-point 0 0 230 470 0 0) #(struct:pulled-point 0 0 180 470 0 "
 #"0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 240 4"
 #"20 0 0) #(struct:pulled-point 0 0 290 420 0 0) #(struct:pulled-point"
 #" 0 0 290 470 0 0) #(struct:pulled-point 0 0 240 470 0 0)) 255 \"pink"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 300 420 0 0) #(stru"
 #"ct:pulled-point 0 0 350 420 0 0) #(struct:pulled-point 0 0 350 470 0"
 #" 0) #(struct:pulled-point 0 0 300 470 0 0)) 255 \"pink\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 180 480 0 0) #(struct:pulled-poin"
 #"t 0 0 230 480 0 0) #(struct:pulled-point 0 0 230 530 0 0) #(struct:p"
 #"ulled-point 0 0 180 530 0 0)) 255 \"pink\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 240 480 0 0) #(struct:pulled-point 0 0 290 480 "
 #"0 0) #(struct:pulled-point 0 0 290 530 0 0) #(struct:pulled-point 0 "
 #"0 240 530 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 300 480 0 0) #(struct:pulled-point 0 0 350 480 0 0) #(struct:"
 #"pulled-point 0 0 350 530 0 0) #(struct:pulled-point 0 0 300 530 0 0)"
 #") 255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 180 0 0"
 #" 0) #(struct:pulled-point 0 0 230 0 0 0) #(struct:pulled-point 0 0 2"
 #"30 50 0 0) #(struct:pulled-point 0 0 180 50 0 0)) 255 \"red\")) #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 240 0 0 0) #(struct:pulled-p"
 #"oint 0 0 290 0 0 0) #(struct:pulled-point 0 0 290 50 0 0) #(struct:p"
 #"ulled-point 0 0 240 50 0 0)) 255 \"red\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 300 0 0 0) #(struct:pulled-point 0 0 350 0 0 0) #"
 #"(struct:pulled-point 0 0 350 50 0 0) #(struct:pulled-point 0 0 300 5"
 #"0 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 18"
 #"0 60 0 0) #(struct:pulled-point 0 0 230 60 0 0) #(struct:pulled-poin"
 #"t 0 0 230 110 0 0) #(struct:pulled-point 0 0 180 110 0 0)) 255 \"red"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 240 60 0 0) #(struc"
 #"t:pulled-point 0 0 290 60 0 0) #(struct:pulled-point 0 0 290 110 0 0"
 #") #(struct:pulled-point 0 0 240 110 0 0)) 255 \"red\")) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 300 60 0 0) #(struct:pulled-point 0 "
 #"0 350 60 0 0) #(struct:pulled-point 0 0 350 110 0 0) #(struct:pulled"
 #"-point 0 0 300 110 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 180 120 0 0) #(struct:pulled-point 0 0 230 120 0 0) #"
 #"(struct:pulled-point 0 0 230 170 0 0) #(struct:pulled-point 0 0 180 "
 #"170 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"240 120 0 0) #(struct:pulled-point 0 0 290 120 0 0) #(struct:pulled-"
 #"point 0 0 290 170 0 0) #(struct:pu"
 #"lled-point 0 0 240 170 0 0)) 255 \"red\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 300 120 0 0) #(struct:pulled-point 0 0 350 120 0 "
 #"0) #(struct:pulled-point 0 0 350 170 0 0) #(struct:pulled-point 0 0 "
 #"300 170 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point "
 #"0 0 360 180 0 0) #(struct:pulled-point 0 0 410 180 0 0) #(struct:pul"
 #"led-point 0 0 410 230 0 0) #(struct:pulled-point 0 0 360 230 0 0)) 2"
 #"55 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 420 180 0 "
 #"0) #(struct:pulled-point 0 0 470 180 0 0) #(struct:pulled-point 0 0 "
 #"470 230 0 0) #(struct:pulled-point 0 0 420 230 0 0)) 255 \"blue\")) "
 #"#(struct:polygon (#(struct:pulled-point 0 0 480 180 0 0) #(struct:pu"
 #"lled-point 0 0 530 180 0 0) #(struct:pulled-point 0 0 530 230 0 0) #"
 #"(struct:pulled-point 0 0 480 230 0 0)) 255 \"blue\")) #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 360 240 0 0) #(struct:pulled-point 0 0"
 #" 410 240 0 0) #(struct:pulled-point 0 0 410 290 0 0) #(struct:pulled"
 #"-point 0 0 360 290 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 420 240 0 0) #(struct:pulled-point 0 0 470 240 0 0) "
 #"#(struct:pulled-point 0 0 470 290 0 0) #(struct:pulled-point 0 0 420"
 #" 290 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 480 240 0 0) #(struct:pulled-point 0 0 530 240 0 0) #(struct:pulle"
 #"d-point 0 0 530 290 0 0) #(struct:pulled-point 0 0 480 290 0 0)) 255"
 #" \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 360 300 0 0)"
 #" #(struct:pulled-point 0 0 410 300 0 0) #(struct:pulled-point 0 0 41"
 #"0 350 0 0) #(struct:pulled-point 0 0 360 350 0 0)) 255 \"blue\")) #("
 #"struct:polygon (#(struct:pulled-point 0 0 420 300 0 0) #(struct:pull"
 #"ed-point 0 0 470 300 0 0) #(struct:pulled-point 0 0 470 350 0 0) #(s"
 #"truct:pulled-point 0 0 420 350 0 0)) 255 \"blue\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 480 300 0 0) #(struct:pulled-point 0 0 5"
 #"30 300 0 0) #(struct:pulled-point 0 0 530 350 0 0) #(struct:pulled-p"
 #"oint 0 0 480 350 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 540 180 0 0) #(struct:pulled-point 0 0 590 180 0 0) #("
 #"struct:pulled-point 0 0 590 230 0 0) #(struct:pulled-point 0 0 540 2"
 #"30 0 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 600 180 0 0) #(struct:pulled-point 0 0 650 180 0 0) #(struct:pulle"
 #"d-point 0 0 650 230 0 0) #(struct:pulled-point 0 0 600 230 0 0)) 255"
 #" \"purple\")) #(struct:polygon (#(struct:pulled-point 0 0 660 180 0 "
 #"0) #(struct:pulled-point 0 0 710 180 0 0) #(struct:pulled-point 0 0 "
 #"710 230 0 0) #(struct:pulled-point 0 0 660 230 0 0)) 255 \"purple\")"
 #") #(struct:polygon (#(struct:pulled-point 0 0 540 240 0 0) #(struct:"
 #"pulled-point 0 0 590 240 0 0) #(struct:pulled-point 0 0 590 290 0 0)"
 #" #(struct:pulled-point 0 0 540 290 0 0)) 255 \"purple\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 600 240 0 0) #(struct:pulled-point"
 #" 0 0 650 240 0 0) #(struct:pulled-point 0 0 650 290 0 0) #(struct:pu"
 #"lled-point 0 0 600 290 0 0)) 255 \"purple\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 660 240 0 0) #(struct:pulled-point 0 0 710 240"
 #" 0 0) #(struct:pulled-point 0 0 710 290 0 0) #(struct:pulled-point 0"
 #" 0 660 290 0 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 540 300 0 0) #(struct:pulled-point 0 0 590 300 0 0) #(stru"
 #"ct:pulled-point 0 0 590 350 0 0) #(struct:pulled-point 0 0 540 350 0"
 #" 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-point 0 0 60"
 #"0 300 0 0) #(struct:pulled-point 0 0 650 300 0 0) #(struct:pulled-po"
 #"int 0 0 650 350 0 0) #(struct:pulled-point 0 0 600 350 0 0)) 255 \"p"
 #"urple\")) #(struct:polygon (#(struct:pulled-point 0 0 660 300 0 0) #"
 #"(struct:pulled-point 0 0 710 300 0 0) #(struct:pulled-point 0 0 710 "
 #"350 0 0) #(struct:pulled-point 0 0 660 350 0 0)) 255 \"purple\")) #("
 #"struct:bb 710 530 530) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-cube"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF4CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 6           4 21 11069
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:polygon (#(struct:pulled-point 0 0 180 18"
 #"0 0 0) #(struct:pulled-point 0 0 230 180 0 0) #(struct:pulled-point "
 #"0 0 230 230 0 0) #(struct:pulled-point 0 0 180 230 0 0)) 255 \"green"
 #"\") #(struct:polygon (#(struct:pulled-point 0 0 240 180 0 0) #(struc"
 #"t:pulled-point 0 0 290 180 0 0) #(struct:pulled-point 0 0 290 230 0 "
 #"0) #(struct:pulled-point 0 0 240 230 0 0)) 255 \"green\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 300 180 0 0) #(struct:pulled-poin"
 #"t 0 0 350 180 0 0) #(struct:pulled-point 0 0 350 230 0 0) #(struct:p"
 #"ulled-point 0 0 300 230 0 0)) 255 \"red\")) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 180 240 0 0) #(struct:pulled-point 0 0 230 240 0"
 #" 0) #(struct:pulled-point 0 0 230 290 0 0) #(struct:pulled-point 0 0"
 #" 180 290 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 240 240 0 0) #(struct:pulled-point 0 0 290 240 0 0) #(struct:"
 #"pulled-point 0 0 290 290 0 0) #(struct:pulled-point 0 0 240 290 0 0)"
 #") 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 0 300 24"
 #"0 0 0) #(struct:pulled-point 0 0 350 240 0 0) #(struct:pulled-point "
 #"0 0 350 290 0 0) #(struct:pulled-point 0 0 300 290 0 0)) 255 \"red\""
 #")) #(struct:polygon (#(struct:pulled-point 0 0 180 300 0 0) #(struct"
 #":pulled-point 0 0 230 300 0 0) #(struct:pulled-point 0 0 230 350 0 0"
 #") #(struct:pulled-point 0 0 180 350 0 0)) 255 \"green\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 240 300 0 0) #(struct:pulled-point"
 #" 0 0 290 300 0 0) #(struct:pulled-point 0 0 290 350 0 0) #(struct:pu"
 #"lled-point 0 0 240 350 0 0)) 255 \"green\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 300 300 0 0) #(struct:pulled-point 0 0 350 300 "
 #"0 0) #(struct:pulled-point 0 0 350 350 0 0) #(struct:pulled-point 0 "
 #"0 300 350 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 180 0 0) #(struct:pulled-point 0 0 50 180 0 0) #(struct:pull"
 #"ed-point 0 0 50 230 0 0) #(struct:"
 #"pulled-point 0 0 0 230 0 0)) 255 \"orange\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 60 180 0 0) #(struct:pulled-point 0 0 110 180 "
 #"0 0) #(struct:pulled-point 0 0 110 230 0 0) #(struct:pulled-point 0 "
 #"0 60 230 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 120 180 0 0) #(struct:pulled-point 0 0 170 180 0 0) #(struct"
 #":pulled-point 0 0 170 230 0 0) #(struct:pulled-point 0 0 120 230 0 0"
 #")) 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 0 24"
 #"0 0 0) #(struct:pulled-point 0 0 50 240 0 0) #(struct:pulled-point 0"
 #" 0 50 290 0 0) #(struct:pulled-point 0 0 0 290 0 0)) 255 \"orange\")"
 #") #(struct:polygon (#(struct:pulled-point 0 0 60 240 0 0) #(struct:p"
 #"ulled-point 0 0 110 240 0 0) #(struct:pulled-point 0 0 110 290 0 0) "
 #"#(struct:pulled-point 0 0 60 290 0 0)) 255 \"orange\")) #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 120 240 0 0) #(struct:pulled-point 0"
 #" 0 170 240 0 0) #(struct:pulled-point 0 0 170 290 0 0) #(struct:pull"
 #"ed-point 0 0 120 290 0 0)) 255 \"orange\")) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 300 0 0) #(struct:pulled-point 0 0 50 300 0 0)"
 #" #(struct:pulled-point 0 0 50 350 0 0) #(struct:pulled-point 0 0 0 3"
 #"50 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 60 300 0 0) #(struct:pulled-point 0 0 110 300 0 0) #(struct:pulled"
 #"-point 0 0 110 350 0 0) #(struct:p"
 #"ulled-point 0 0 60 350 0 0)) 255 \"orange\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 120 300 0 0) #(struct:pulled-point 0 0 170 300"
 #" 0 0) #(struct:pulled-point 0 0 170 350 0 0) #(struct:pulled-point 0"
 #" 0 120 350 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 180 360 0 0) #(struct:pulled-point 0 0 230 360 0 0) #(stru"
 #"ct:pulled-point 0 0 230 410 0 0) #(struct:pulled-point 0 0 180 410 0"
 #" 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 240 "
 #"360 0 0) #(struct:pulled-point 0 0 290 360 0 0) #(struct:pulled-poin"
 #"t 0 0 290 410 0 0) #(struct:pulled-point 0 0 240 410 0 0)) 255 \"pin"
 #"k\")) #(struct:polygon (#(struct:pulled-point 0 0 300 360 0 0) #(str"
 #"uct:pulled-point 0 0 350 360 0 0) #(struct:pulled-point 0 0 350 410 "
 #"0 0) #(struct:pulled-point 0 0 300 410 0 0)) 255 \"green\")) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 180 420 0 0) #(struct:pulled-po"
 #"int 0 0 230 420 0 0) #(struct:pulled-point 0 0 230 470 0 0) #(struct"
 #":pulled-point 0 0 180 470 0 0)) 255 \"pink\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 240 420 0 0) #(struct:pulled-point 0 0 290 42"
 #"0 0 0) #(struct:pulled-point 0 0 290 470 0 0) #(struct:pulled-point "
 #"0 0 240 470 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 300 420 0 0) #(struct:pulled-point 0 0 350 420 0 0) #(struc"
 #"t:pulled-point 0 0 350 470 0 0) #(struct:pulled-point 0 0 300 470 0 "
 #"0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 0 180 "
 #"480 0 0) #(struct:pulled-point 0 0 230 480 0 0) #(struct:pulled-poin"
 #"t 0 0 230 530 0 0) #(struct:pulled-point 0 0 180 530 0 0)) 255 \"pin"
 #"k\")) #(struct:polygon (#(struct:pulled-point 0 0 240 480 0 0) #(str"
 #"uct:pulled-point 0 0 290 480 0 0) #(struct:pulled-point 0 0 290 530 "
 #"0 0) #(struct:pulled-point 0 0 240 530 0 0)) 255 \"pink\")) #(struct"
 #":polygon (#(struct:pulled-point 0 0 300 480 0 0) #(struct:pulled-poi"
 #"nt 0 0 350 480 0 0) #(struct:pulled-point 0 0 350 530 0 0) #(struct:"
 #"pulled-point 0 0 300 530 0 0)) 255 \"green\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 180 0 0 0) #(struct:pulled-point 0 0 230 0 0 "
 #"0) #(struct:pulled-point 0 0 230 50 0 0) #(struct:pulled-point 0 0 1"
 #"80 50 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 240 0 0 0) #(struct:pulled-point 0 0 290 0 0 0) #(struct:pulled-po"
 #"int 0 0 290 50 0 0) #(struct:pulled-point 0 0 240 50 0 0)) 255 \"red"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 300 0 0 0) #(struct"
 #":pulled-point 0 0 350 0 0 0) #(struct:pulled-point 0 0 350 50 0 0) #"
 #"(struct:pulled-point 0 0 300 50 0 0)) 255 \"purple\")) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 180 60 0 0) #(struct:pulled-point 0 0"
 #" 230 60 0 0) #(struct:pulled-point 0 0 230 110 0 0) #(struct:pulled-"
 #"point 0 0 180 110 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 240 60 0 0) #(struct:pulled-point 0 0 290 60 0 0) #(st"
 #"ruct:pulled-point 0 0 290 110 0 0) #(struct:pulled-point 0 0 240 110"
 #" 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 300"
 #" 60 0 0) #(struct:pulled-point 0 0 350 60 0 0) #(struct:pulled-point"
 #" 0 0 350 110 0 0) #(struct:pulled-point 0 0 300 110 0 0)) 255 \"purp"
 #"le\")) #(struct:polygon (#(struct:pulled-point 0 0 180 120 0 0) #(st"
 #"ruct:pulled-point 0 0 230 120 0 0) #(struct:pulled-point 0 0 230 170"
 #" 0 0) #(struct:pulled-point 0 0 180 170 0 0)) 255 \"red\")) #(struct"
 #":polygon (#(struct:pulled-point 0 0 240 120 0 0) #(struct:pulled-poi"
 #"nt 0 0 290 120 0 0) #(struct:pulled-point 0 0 290 170 0 0) #(struct:"
 #"pulled-point 0 0 240 170 0 0)) 255 \"red\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 300 120 0 0) #(struct:pulled-point 0 0 350 120 "
 #"0 0) #(struct:pulled-point 0 0 350 170 0 0) #(struct:pulled-point 0 "
 #"0 300 170 0 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 360 180 0 0) #(struct:pulled-point 0 0 410 180 0 0) #(struc"
 #"t:pulled-point 0 0 410 230 0 0) #(struct:pulled-point 0 0 360 230 0 "
 #"0)) 255 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 420 1"
 #"80 0 0) #(struct:pulled-point 0 0 470 180 0 0) #(struct:pulled-point"
 #" 0 0 470 230 0 0) #(struct:pulled-point 0 0 420 230 0 0)) 255 \"blue"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 480 180 0 0) #(stru"
 #"ct:pulled-point 0 0 530 180 0 0) #(struct:pulled-point 0 0 530 230 0"
 #" 0) #(struct:pulled-point 0 0 480 230 0 0)) 255 \"blue\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 360 240 0 0) #(struct:pulled-poin"
 #"t 0 0 410 240 0 0) #(struct:pulled-point 0 0 410 290 0 0) #(struct:p"
 #"ulled-point 0 0 360 290 0 0)) 255 \"blue\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 420 240 0 0) #(struct:pulled-point 0 0 470 240 "
 #"0 0) #(struct:pulled-point 0 0 470 290 0 0) #(struct:pulled-point 0 "
 #"0 420 290 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 480 240 0 0) #(struct:pulled-point 0 0 530 240 0 0) #(struct:"
 #"pulled-point 0 0 530 290 0 0) #(struct:pulled-point 0 0 480 290 0 0)"
 #") 255 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 360 300"
 #" 0 0) #(struct:pulled-point 0 0 410 300 0 0) #(struct:pulled-point 0"
 #" 0 410 350 0 0) #(struct:pulled-point 0 0 360 350 0 0)) 255 \"blue\""
 #")) #(struct:polygon (#(struct:pulled-point 0 0 420 300 0 0) #(struct"
 #":pulled-point 0 0 470 300 0 0) #(struct:pulled-point 0 0 470 350 0 0"
 #") #(struct:pulled-point 0 0 420 350 0 0)) 255 \"blue\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 480 300 0 0) #(struct:pulled-point "
 #"0 0 530 300 0 0) #(struct:pulled-point 0 0 530 350 0 0) #(struct:pul"
 #"led-point 0 0 480 350 0 0)) 255 \"blue\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 540 180 0 0) #(struct:pulled-point 0 0 590 180 0 "
 #"0) #(struct:pulled-point 0 0 590 230 0 0) #(struct:pulled-point 0 0 "
 #"540 230 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 600 180 0 0) #(struct:pulled-point 0 0 650 180 0 0) #(struct:pu"
 #"lled-point 0 0 650 230 0 0) #(struct:pulled-point 0 0 600 230 0 0)) "
 #"255 \"purple\")) #(struct:polygon (#(struct:pulled-point 0 0 660 180"
 #" 0 0) #(struct:pulled-point 0 0 710 180 0 0) #(struct:pulled-point 0"
 #" 0 710 230 0 0) #(struct:pulled-point 0 0 660 230 0 0)) 255 \"purple"
 #"\")) #(struct:polygon (#(struct:pulled-point 0 0 540 240 0 0) #(stru"
 #"ct:pulled-point 0 0 590 240 0 0) #(struct:pulled-point 0 0 590 290 0"
 #" 0) #(struct:pulled-point 0 0 540 290 0 0)) 255 \"pink\")) #(struct:"
 #"polygon (#(struct:pulled-point 0 0 600 240 0 0) #(struct:pulled-poin"
 #"t 0 0 650 240 0 0) #(struct:pulled-point 0 0 650 290 0 0) #(struct:p"
 #"ulled-point 0 0 600 290 0 0)) 255 \"purple\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 660 240 0 0) #(struct:pulled-point 0 0 710 24"
 #"0 0 0) #(struct:pulled-point 0 0 710 290 0 0) #(struct:pulled-point "
 #"0 0 660 290 0 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled"
 #"-point 0 0 540 300 0 0) #(struct:pulled-point 0 0 590 300 0 0) #(str"
 #"uct:pulled-point 0 0 590 350 0 0) #(struct:pulled-point 0 0 540 350 "
 #"0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 600"
 #" 300 0 0) #(struct:pulled-point 0 0 650 300 0 0) #(struct:pulled-poi"
 #"nt 0 0 650 350 0 0) #(struct:pulled-point 0 0 600 350 0 0)) 255 \"pu"
 #"rple\")) #(struct:polygon (#(struct:pulled-point 0 0 660 300 0 0) #("
 #"struct:pulled-point 0 0 710 300 0 0) #(struct:pulled-point 0 0 710 3"
 #"50 0 0) #(struct:pulled-point 0 0 660 350 0 0)) 255 \"purple\")) #(s"
 #"truct:bb 710 530 530) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-cube"
0 0 24 3 1 #" "
0 0 14 3 8 #"CUBEF1CC"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 6           4 21 11069
(
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:polygon (#(struct:pulled-point 0 0 180 18"
 #"0 0 0) #(struct:pulled-point 0 0 230 180 0 0) #(struct:pulled-point "
 #"0 0 230 230 0 0) #(struct:pulled-point 0 0 180 230 0 0)) 255 \"orang"
 #"e\") #(struct:polygon (#(struct:pulled-point 0 0 240 180 0 0) #(stru"
 #"ct:pulled-point 0 0 290 180 0 0) #(struct:pulled-point 0 0 290 230 0"
 #" 0) #(struct:pulled-point 0 0 240 230 0 0)) 255 \"orange\")) #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 300 180 0 0) #(struct:pulled-po"
 #"int 0 0 350 180 0 0) #(struct:pulled-point 0 0 350 230 0 0) #(struct"
 #":pulled-point 0 0 300 230 0 0)) 255 \"orange\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 180 240 0 0) #(struct:pulled-point 0 0 230 "
 #"240 0 0) #(struct:pulled-point 0 0 230 290 0 0) #(struct:pulled-poin"
 #"t 0 0 180 290 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 240 240 0 0) #(struct:pulled-point 0 0 290 240 0 0) #(st"
 #"ruct:pulled-point 0 0 290 290 0 0) #(struct:pulled-point 0 0 240 290"
 #" 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 0 3"
 #"00 240 0 0) #(struct:pulled-point 0 0 350 240 0 0) #(struct:pulled-p"
 #"oint 0 0 350 290 0 0) #(struct:pulled-point 0 0 300 290 0 0)) 255 \""
 #"green\")) #(struct:polygon (#(struct:pulled-point 0 0 180 300 0 0) #"
 #"(struct:pulled-point 0 0 230 300 0 0) #(struct:pulled-point 0 0 230 "
 #"350 0 0) #(struct:pulled-point 0 0 180 350 0 0)) 255 \"green\")) #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 240 300 0 0) #(struct:pulle"
 #"d-point 0 0 290 300 0 0) #(struct:pulled-point 0 0 290 350 0 0) #(st"
 #"ruct:pulled-point 0 0 240 350 0 0)) 255 \"green\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 300 300 0 0) #(struct:pulled-point 0 0 3"
 #"50 300 0 0) #(struct:pulled-point 0 0 350 350 0 0) #(struct:pulled-p"
 #"oint 0 0 300 350 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 180 0 0) #(struct:pulled-point 0 0 50 180 0 0) #(st"
 #"ruct:pulled-point 0 0 50 230 0 0) #(struct:pulled-point 0 0 0 230 0 "
 #"0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-point 0 0 60 "
 #"180 0 0) #(struct:pulled-point 0 0 110 180 0 0) #(struct:pulled-poin"
 #"t 0 0 110 230 0 0) #(struct:pulled-point 0 0 60 230 0 0)) 255 \"purp"
 #"le\")) #(struct:polygon (#(struct:pulled-point 0 0 120 180 0 0) #(st"
 #"ruct:pulled-point 0 0 170 180 0 0) #(struct:pulled-point 0 0 170 230"
 #" 0 0) #(struct:pulled-point 0 0 120 230 0 0)) 255 \"purple\")) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 240 0 0) #(struct:pulled-po"
 #"int 0 0 50 240 0 0) #(struct:pulled-point 0 0 50 290 0 0) #(struct:p"
 #"ulled-point 0 0 0 290 0 0)) 255 \"orange\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 60 240 0 0) #(struct:pulled-point 0 0 110 240 0"
 #" 0) #(struct:pulled-point 0 0 110 290 0 0) #(struct:pulled-point 0 0"
 #" 60 290 0 0)) 255 \"orange\")) #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 120 240 0 0) #(struct:pulled-point 0 0 170 240 0 0) #(struct:"
 #"pulled-point 0 0 170 290 0 0) #(struct:pulled-point 0 0 120 290 0 0)"
 #") 255 \"orange\")) #(struct:polygon (#(struct:pulled-point 0 0 0 300"
 #" 0 0) #(struct:pulled-point 0 0 50 300 0 0) #(struct:pulled-point 0 "
 #"0 50 350 0 0) #(struct:pulled-point 0 0 0 350 0 0)) 255 \"orange\"))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 60 300 0 0) #(struct:pu"
 #"lled-point 0 0 110 300 0 0) #(struct:pulled-point 0 0 110 350 0 0) #"
 #"(struct:pulled-point 0 0 60 350 0 0)) 255 \"orange\")) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 120 300 0 0) #(struct:pulled-point 0 "
 #"0 170 300 0 0) #(struct:pulled-point 0 0 170 350 0 0) #(struct:pulle"
 #"d-point 0 0 120 350 0 0)) 255 \"orange\")) #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 180 360 0 0) #(struct:pulled-point 0 0 230 360 0 "
 #"0) #(struct:pulled-point 0 0 230 410 0 0) #(struct:pulled-point 0 0 "
 #"180 410 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point"
 #" 0 0 240 360 0 0) #(struct:pulled-point 0 0 290 360 0 0) #(struct:pu"
 #"lled-point 0 0 290 410 0 0) #(struct:pulled-point 0 0 240 410 0 0)) "
 #"255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 300 360 0"
 #" 0) #(struct:pulled-point 0 0 350 360 0 0) #(struct:pulled-point 0 0"
 #" 350 410 0 0) #(struct:pulled-point 0 0 300 410 0 0)) 255 \"pink\"))"
 #" #(struct:polygon (#(struct:pulled-point 0 0 180 420 0 0) #(struct:p"
 #"ulled-point 0 0 230 420 0 0) #(struct:pulled-point 0 0 230 470 0 0) "
 #"#(struct:pulled-point 0 0 180 470 0 0)) 255 \"pink\")) #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 240 420 0 0) #(struct:pulled-point 0 "
 #"0 290 420 0 0) #(struct:pulled-point 0 0 290 470 0 0) #(struct:pulle"
 #"d-point 0 0 240 470 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 300 420 0 0) #(struct:pulled-point 0 0 350 420 0 0)"
 #" #(struct:pulled-point 0 0 350 470 0 0) #(struct:pulled-point 0 0 30"
 #"0 470 0 0)) 255 \"pink\")) #(struct:polygon (#(struct:pulled-point 0"
 #" 0 180 480 0 0) #(struct:pulled-point 0 0 230 480 0 0) #(struct:pull"
 #"ed-point 0 0 230 530 0 0) #(struct:pulled-point 0 0 180 530 0 0)) 25"
 #"5 \"pink\")) #(struct:polygon (#(struct:pulled-point 0 0 240 480 0 0"
 #") #(struct:pulled-point 0 0 290 480 0 0) #(struct:pulled-point 0 0 2"
 #"90 530 0 0) #(struct:pulled-point 0 0 240 530 0 0)) 255 \"pink\")) #"
 #"(struct:polygon (#(struct:pulled-point 0 0 300 480 0 0) #(struct:pul"
 #"led-point 0 0 350 480 0 0) #(struct:pulled-point 0 0 350 530 0 0) #("
 #"struct:pulled-point 0 0 300 530 0 0)) 255 \"pink\")) #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 180 0 0 0) #(struct:pulled-point 0 0 23"
 #"0 0 0 0) #(struct:pulled-point 0 0 230 50 0 0) #(struct:pulled-point"
 #" 0 0 180 50 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 240 0 0 0) #(struct:pulled-point 0 0 290 0 0 0) #(struct:pul"
 #"led-point 0 0 290 50 0 0) #(struct:pulled-point 0 0 240 50 0 0)) 255"
 #" \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 300 0 0 0) #("
 #"struct:pulled-point 0 0 350 0 0 0) #(struct:pulled-point 0 0 350 50 "
 #"0 0) #(struct:pulled-point 0 0 300 50 0 0)) 255 \"red\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 180 60 0 0) #(struct:pulled-point "
 #"0 0 230 60 0 0) #(struct:pulled-point 0 0 230 110 0 0) #(struct:pull"
 #"ed-point 0 0 180 110 0 0)) 255 \"red\")) #(struct:polygon (#(struct:"
 #"pulled-point 0 0 240 60 0 0) #(struct:pulled-point 0 0 290 60 0 0) #"
 #"(struct:pulled-point 0 0 290 110 0 0) #(struct:pulled-point 0 0 240 "
 #"110 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"300 60 0 0) #(struct:pulled-point 0 0 350 60 0 0) #(struct:pulled-po"
 #"int 0 0 350 110 0 0) #(struct:pulled-point 0 0 300 110 0 0)) 255 \"r"
 #"ed\")) #(struct:polygon (#(struct:pulled-point 0 0 180 120 0 0) #(st"
 #"ruct:pulled-point 0 0 230 120 0 0) #(struct:pulled-point 0 0 230 170"
 #" 0 0) #(struct:pulled-point 0 0 180 170 0 0)) 255 \"red\")) #(struct"
 #":polygon (#(struct:pulled-point 0 0 240 120 0 0) #(struct:pulled-poi"
 #"nt 0 0 290 120 0 0) #(struct:pulled-point 0 0 290 170 0 0) #(struct:"
 #"pulled-point 0 0 240 170 0 0)) 255 \"red\")) #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 300 120 0 0) #(struct:pulled-point 0 0 350 120 "
 #"0 0) #(struct:pulled-point 0 0 350 170 0 0) #(struct:pulled-point 0 "
 #"0 300 170 0 0)) 255 \"red\")) #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 360 180 0 0) #(struct:pulled-point 0 0 410 180 0 0) #(struct:p"
 #"ulled-point 0 0 410 230 0 0) #(struct:pulled-point 0 0 360 230 0 0))"
 #" 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 0 420 180"
 #" 0 0) #(struct:pulled-point 0 0 470 180 0 0) #(struct:pulled-point 0"
 #" 0 470 230 0 0) #(struct:pulled-p"
 #"oint 0 0 420 230 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 480 180 0 0) #(struct:pulled-point 0 0 530 180 0 0) #"
 #"(struct:pulled-point 0 0 530 230 0 0) #(struct:pulled-point 0 0 480 "
 #"230 0 0)) 255 \"green\")) #(struct:polygon (#(struct:pulled-point 0 "
 #"0 360 240 0 0) #(struct:pulled-point 0 0 410 240 0 0) #(struct:pulle"
 #"d-point 0 0 410 290 0 0) #(struct:pulled-point 0 0 360 290 0 0)) 255"
 #" \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 420 240 0 0)"
 #" #(struct:pulled-point 0 0 470 240 0 0) #(struct:pulled-point 0 0 47"
 #"0 290 0 0) #(struct:pulled-point 0 0 420 290 0 0)) 255 \"blue\")) #("
 #"struct:polygon (#(struct:pulled-point 0 0 480 240 0 0) #(struct:pull"
 #"ed-point 0 0 530 240 0 0) #(struct:pulled-point 0 0 530 290 0 0) #(s"
 #"truct:pulled-point 0 0 480 290 0 0)) 255 \"blue\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 360 300 0 0) #(struct:pulled-point 0 0 4"
 #"10 300 0 0) #(struct:pulled-point 0 0 410 350 0 0) #(struct:pulled-p"
 #"oint 0 0 360 350 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pul"
 #"led-point 0 0 420 300 0 0) #(struct:pulled-point 0 0 470 300 0 0) #("
 #"struct:pulled-point 0 0 470 350 0 0) #(struct:pulled-point 0 0 420 3"
 #"50 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 "
 #"480 300 0 0) #(struct:pulled-point 0 0 530 300 0 0) #(struct:pulled-"
 #"point 0 0 530 350 0 0) #(struct:pu"
 #"lled-point 0 0 480 350 0 0)) 255 \"blue\")) #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 540 180 0 0) #(struct:pulled-point 0 0 590 180 0"
 #" 0) #(struct:pulled-point 0 0 590 230 0 0) #(struct:pulled-point 0 0"
 #" 540 230 0 0)) 255 \"blue\")) #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 600 180 0 0) #(struct:pulled-point 0 0 650 180 0 0) #(struct:p"
 #"ulled-point 0 0 650 230 0 0) #(struct:pulled-point 0 0 600 230 0 0))"
 #" 255 \"blue\")) #(struct:polygon (#(struct:pulled-point 0 0 660 180 "
 #"0 0) #(struct:pulled-point 0 0 710 180 0 0) #(struct:pulled-point 0 "
 #"0 710 230 0 0) #(struct:pulled-point 0 0 660 230 0 0)) 255 \"blue\")"
 #") #(struct:polygon (#(struct:pulled-point 0 0 540 240 0 0) #(struct:"
 #"pulled-point 0 0 590 240 0 0) #(struct:pulled-point 0 0 590 290 0 0)"
 #" #(struct:pulled-point 0 0 540 290 0 0)) 255 \"purple\")) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 600 240 0 0) #(struct:pulled-point"
 #" 0 0 650 240 0 0) #(struct:pulled-point 0 0 650 290 0 0) #(struct:pu"
 #"lled-point 0 0 600 290 0 0)) 255 \"purple\")) #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 660 240 0 0) #(struct:pulled-point 0 0 710 240"
 #" 0 0) #(struct:pulled-point 0 0 710 290 0 0) #(struct:pulled-point 0"
 #" 0 660 290 0 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-"
 #"point 0 0 540 300 0 0) #(struct:pulled-point 0 0 590 300 0 0) #(stru"
 #"ct:pulled-point 0 0 590 350 0 0) #(struct:pulled-point 0 0 540 350 0"
 #" 0)) 255 \"purple\")) #(struct:polygon (#(struct:pulled-point 0 0 60"
 #"0 300 0 0) #(struct:pulled-point 0 0 650 300 0 0) #(struct:pulled-po"
 #"int 0 0 650 350 0 0) #(struct:pulled-point 0 0 600 350 0 0)) 255 \"p"
 #"urple\")) #(struct:polygon (#(struct:pulled-point 0 0 660 300 0 0) #"
 #"(struct:pulled-point 0 0 710 300 0 0) #(struct:pulled-point 0 0 710 "
 #"350 0 0) #(struct:pulled-point 0 0 660 350 0 0)) 255 \"purple\")) #("
 #"struct:bb 710 530 530) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";Strategy:Structural Decomposition"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-cube"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 14 #"overlay/offset"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"overlay/offset"
0 0 24 3 2 #" ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f3"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f2"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 2 #") "
0 0 14 3 5 #"ofset"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f6"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f1"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f4"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"ofset"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"render-face"
0 0 24 3 2 #" ("
0 0 14 3 7 #"cube-f5"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-cube"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;handle-key: worldstate key-event -> worldstate"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0           0
